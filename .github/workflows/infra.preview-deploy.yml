name: "Infra Preview Deploy"

on:
  push:
      branches:
      - main
      paths:
      - 10_infra/**
      - .github/workflows/**
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env: 
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.2.8
  TF_PROJECT: tastylog
  TF_ENVIROMENT: dev #環境名を指定する。variables.tfvarsに記載している環境名と一致させること。
  #環境名一致しないと、terraform planでエラーになる。deploy時に全てリセットとなる。

defaults:
  run:
    shell: bash
    working-directory: "10_infra/"

jobs:
  preview:
    name: "Preview"
    runs-on: ubuntu-latest
    outputs:
      TF_PLAN_EXITCODE: ${{ steps.plan.outputs.exitcode }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false  #wrapperを使用することで、planのdetailed-exitcodeを使用できるようになる
      - name: Terraform format
        run: |
          terraform fmt -check
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Terraform init
        run: |
          terraform init -no-color
      - name: Terraform validate
        run: |
          terraform validate -no-color
      - name: Terraform plan
        continue-on-error: true #planのdetailed-exitcodeを使用するために、continue-on-errorをtrueにする
        id: plan
        run: |  
          set +e # シェルレベルで途中終了させないように設定。つまりエラーの無視。

          terraform plan \
            -var 'project=${{ env.TF_PROJECT }}' \
            -var 'environment=${{ env.TF_ENVIROMENT }}' \
            -var 'username=${{ secrets.MYSQL_USERNAME }}' \
            -var 'password=${{ secrets.MYSQL_PASSWORD }}' \
            -no-color \
            -input=false \
            -detailed-exitcode

          ############上記set +eでエラー無視をしているが、if文でエラーを検知し、止める。
          # terraform plan の 終了コードを変数に保存
          code=$?
          echo "Terraform plan exit code is $code"
          # 1（エラー）の場合はスクリプト停止させる。
          #2（変更あり）の場合はスクリプトを続行。
          #0（変更なし）の場合はスクリプトを終了させる。
          if [ $code -eq 1 ]; then
            echo "Terraform plan failed with exit code 1. Stopping script."
            exit 1
          elif [ $code -eq 2 ]; then
            #echo "Terraform plan succeeded with exit code 2 (changes present). Continuing script."
            echo "::error::Terraform plan found changes (exit code 2). Approval required."
          elif [ $code -eq 0 ]; then
            echo "Terraform plan finished with exit code 0 (no changes). Skipping further steps."
          fi
          ############
          # exit codeをGitHub Actionsの出力に設定
          #code=$?後のif文で終了コード0を取得しているので、以下は取得できなくなる。
          #echo "exitcode=$?" >> $GITHUB_OUTPUT
          echo "exitcode=$code" >> $GITHUB_OUTPUT

      - name: Debug plan exit code #デバッグ用
        # if: always() #常に実行する
        if: always()
        run: |
          echo "Plan exit code is: ${{ steps.plan.outputs.exitcode }}"

      - name: Slack notify
        if: steps.plan.outputs.exitcode == '2' #planのdetailed-exitcodeが2のときのみ実行する

        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel-id: "C08MVSL001Z"
          payload: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "Request for approve",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  deploy:
    name: "Deploy"
    needs: preview
    if: needs.preview.outputs.TF_PLAN_EXITCODE == 2 #planのdetailed-exitcodeが2のときのみ実行する
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false  #wrapperを使用することで、planのdetailed-exitcodeを使用できるようになる
      - name: Terraform format
        run: |
          terraform fmt -check
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Terraform init
        run: |
          terraform init -no-color

      - name: terraform apply
        id: apply
        run: |
          terraform apply \
            -var 'project=${{ env.TF_PROJECT }}' \
            -var 'environment=${{ env.TF_ENVIROMENT }}' \
            -var 'username=${{ secrets.MYSQL_USERNAME }}' \
            -var 'password=${{ secrets.MYSQL_PASSWORD }}' \
            -no-color \
            -input=false \
            -auto-approve

      - name: Slack notify
        if: always() #常に実行する
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel-id: "C08MVSL001Z"
          payload: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "Runner Finished: ${{ steps.apply.outcome }}",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
